type Query {
    getQueue(guildId: String!): Queue
    getPlaylists: [Playlist]!
}
type Mutation {
    joinChannel(channelId: String!, playlistId: String, shuffle: Boolean): Queue!
    switchPlaylist(guildId: String!, playlistId: String!, shuffle: Boolean transitionType: TransitionType): Queue!
    skipSong(guildId: String!): Song!
    pauseSong(guildId: String!): Song!
    resumeSong(guildId: String!, transitionType: TransitionType): Song!
    setVolume(guildId: String!, percent: Float!): Float!
    getPlayTime(guildId: String!): Int!
}
type Queue {
    guildId: String!
    songs: [Song!]!
    isPaused: Boolean!
    trackNumber: Int!
    volumePercent: Float!
}
type Playlist {
    name: String!
    songs: [Song!]!
}
type Song {
    title: String!
    artist: String!
    length: Int!
}
enum TransitionType {
    FADE
    QUEUE
    INSTANT
}

type Subscription {
    volumeChanged(guildId: String): Float!
    playlistChanged(guildId: String!): Queue!
    songChanged(guildId: String!): SongChangedSubscriptionPayload!
}
    
type SongChangedSubscriptionPayload {
    mutation: String!
    song: Song!
    playTime: Int!
}